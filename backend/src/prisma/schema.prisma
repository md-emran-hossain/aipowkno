generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id                Int              @id @default(autoincrement())
  firstName         String?          @db.VarChar(100)
  lastName          String?          @db.VarChar(100)
  email             String           @unique @db.VarChar(100)
  password          String?          @db.VarChar(255)
  status            String?          @default("new") @db.VarChar(20)
  profilePicture    String?          @db.VarChar(255)
  source            Json?
  lastSigninAt      DateTime?
  passwordUpdatedAt DateTime?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  articles          articleAuthors[]
}

model article {
  id          Int              @id @default(autoincrement())
  title       String           @db.VarChar(255)
  slug        String           @unique @db.VarChar(255)
  content     Json?
  contentText String?
  status      String           @default("draft") @db.VarChar(20)
  coverImage  String?          @db.VarChar(255)
  publishedAt DateTime?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  authors     articleAuthors[]
  tags        articleTag[]
}

model articleAuthors {
  articleId Int
  userId    Int
  article   article @relation(fields: [articleId], references: [id])
  user      user    @relation(fields: [userId], references: [id])

  @@id([articleId, userId])
}

model tag {
  id        Int           @id @default(autoincrement())
  name      String        @unique @db.VarChar(100)
  slug      String        @unique @db.VarChar(100)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  articles  articleTag[]
}

model articleTag {
  articleId Int
  tagId     Int
  article   article @relation(fields: [articleId], references: [id])
  tag       tag     @relation(fields: [tagId], references: [id])

  @@id([articleId, tagId])
}
